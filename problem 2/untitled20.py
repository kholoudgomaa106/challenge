# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dDtfUEuw1z64U48oY-JTwxVly54Nrms2
"""

!pip install ultralytics
from ultralytics import YOLO

from IPython.display import display,Image

!yolo task=detect mode=predict model=yolov8n.pt conf=0.25 source="/content/objects.png"

image ='/content/runs/detect/predict/objects.png'
Image(filename=image,height=400)

import cv2
import json


image_path = "/content/objects.png"
image = cv2.imread(image_path)


face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
faces = face_cascade.detectMultiScale(gray_image, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

!yolo task=detect mode=predict model=yolov8n.pt conf=0.25 source="/content/objects.png"

# Calculate width and height of objects
results = []
for i, (x, y, w, h) in enumerate(faces):
    width = int(w)
    height = int(h)
    object_id = int(i)

    # Save results in a list
    results.append({'object_id': object_id, 'width': width, 'height': height})

# Save results in a txt file


output_path = "/content/runs/detect/results.txt"

# Convert results to a string format
results_str = str(results)

# Write results to the file
with open(output_path, 'w') as text_file:
    text_file.write(results_str)

print("Results saved in", output_path)

with open('/content/runs/detect/results.txt', 'r') as file:
    data = file.read()

parsed_data = data.split('\n')

import json

json_data = json.dumps(parsed_data)

with open('/content/object_dimensions.json', 'w') as file:
    file.write(json_data)